#include <iostream>
#include <vector>
/* C compatibility struct */
struct Elf64_Prpsinfo
{
    char pr_fname[6];   /**< Filename of executable */
    char pr_psargs[10];  /**< Initial part of arg list */
};

class Description {
public:
    Description(std::vector<uint8_t> data) : data(data) {};
    std::vector<uint8_t> data;
};

class CorePrPsInfo {
public:
    std::string filename;
    void vuln(Description desc) {
        const auto* info = reinterpret_cast<const Elf64_Prpsinfo*>(desc.data.data());
        this->filename = info->pr_fname;/* implicitly ctor from char * to std::string */
    }
};

int main(int argc, char** argv)
{
    std::vector<uint8_t> v (6, 'A');
    std::vector<uint8_t> v2 (10, 'B');
    v.insert(v.end(), v2.begin(), v2.end());

    Description desc {v};

    CorePrPsInfo core;
    core.vuln(desc);

    std::cout << core.filename << std::endl; /* leak the content of pr_psargs */
    return 0;
}
